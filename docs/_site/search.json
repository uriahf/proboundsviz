[
  {
    "objectID": "reference/proboundsviz.html",
    "href": "reference/proboundsviz.html",
    "title": "proboundsviz",
    "section": "",
    "text": "proboundsviz\nproboundsviz"
  },
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Function reference",
    "section": "",
    "text": "Functions to inspect docstrings.\n\n\n\nproboundsviz.create_probounds_table",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#some-functions",
    "href": "reference/index.html#some-functions",
    "title": "Function reference",
    "section": "",
    "text": "Functions to inspect docstrings.\n\n\n\nproboundsviz.create_probounds_table",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "Example",
    "section": "",
    "text": "import proboundsviz.proboundsviz as pbv\n\nimport probounds.probounds as pb\nimport pandas as pd\nimport numpy as np\n\ndf_observed = pd.DataFrame({\n    'trt': np.concatenate([np.repeat(1, 1400), np.repeat(0, 600)] * 2)  ,\n    'outcome': [1] * 378 + [0] * 1022 + [1] * 420 + [0] * 180 +\n            [1] * 980 + [0] * 420 + [1] * 420 + [0] * 180,\n    'sex': ['Female'] * 2000 + ['Male']* 2000\n})\n\ndf_experimental = pd.DataFrame({\n    'trt': np.concatenate([np.repeat(1, 1000), np.repeat(0, 1000)] * 2)  ,\n    'outcome': [1] * 489  + [0] * 511 + [1] * 210 + [0] * 790 +\n            [1] * 490 + [0] * 510 + [1] * 210 + [0] * 790,\n    'sex': ['Female'] * 2000 + ['Male']* 2000\n})\n\npbv.create_probounds_table(df_observed, 'observational')\nfrom reactable import Reactable, embed_css\n\nembed_css()    \n\n\npbv.create_probounds_table(df_experimental, 'experimental')"
  },
  {
    "objectID": "example.html#advertissement",
    "href": "example.html#advertissement",
    "title": "Example",
    "section": "Advertissement",
    "text": "Advertissement\n\ndf_ad_experimental = pd.DataFrame({\n    'trt': np.concatenate([np.repeat(1, 100), np.repeat(0, 100)])  ,\n    'outcome': [1] * 20  + [0] * 80 + [1] * 45 + [0] * 55 \n})\n\npbv.create_probounds_table(df_ad_experimental, 'experimental')\n\n\n    \n    \n    \n    \n    \n\n\n\n\n\n\nprobounds_crosstab = pb.create_probounds_crosstab(df_experimental, datatype='experimental')\nprobounds_crosstab.columns = probounds_crosstab.columns.astype(str)\n\nprobounds_crosstab\n\n\n\n\n\n\n\noutcome\n0\n1\n\n\ntrt\n\n\n\n\n\n\n0\n0.79000\n0.21000\n\n\n1\n0.51050\n0.48950\n\n\nAll\n0.65025\n0.34975"
  },
  {
    "objectID": "reference/proboundsviz.create_probounds_table.html",
    "href": "reference/proboundsviz.create_probounds_table.html",
    "title": "proboundsviz.create_probounds_table",
    "section": "",
    "text": "proboundsviz.create_probounds_table\nproboundsviz.create_probounds_table(raw_data, datatype)",
    "crumbs": [
      "Some functions",
      "proboundsviz.create_probounds_table"
    ]
  }
]